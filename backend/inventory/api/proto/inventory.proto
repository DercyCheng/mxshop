syntax = "proto3";

package inventory;

option go_package = "shop/inventory/api/proto;pb";

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

// InventoryService defines the gRPC service for inventory management
service InventoryService {
  // Stock operations
  rpc SetStock(SetStockRequest) returns (StockInfo);
  rpc GetStock(GetStockRequest) returns (StockInfo);
  rpc ListStocks(ListStocksRequest) returns (ListStocksResponse);
  rpc IncrementStock(IncrementStockRequest) returns (StockInfo);
  rpc DecrementStock(DecrementStockRequest) returns (StockInfo);

  // Batch operations
  rpc BatchGetStocks(BatchGetStocksRequest) returns (BatchGetStocksResponse);

  // Reservation management
  rpc ReserveStock(ReserveStockRequest) returns (ReservationResponse);
  rpc CommitReservation(CommitReservationRequest)
      returns (google.protobuf.Empty);
  rpc CancelReservation(CancelReservationRequest)
      returns (google.protobuf.Empty);
  rpc GetReservation(GetReservationRequest) returns (ReservationInfo);

  // Warehouse management
  rpc CreateWarehouse(CreateWarehouseRequest) returns (WarehouseInfo);
  rpc UpdateWarehouse(UpdateWarehouseRequest) returns (WarehouseInfo);
  rpc DeleteWarehouse(DeleteWarehouseRequest) returns (google.protobuf.Empty);
  rpc GetWarehouse(GetWarehouseRequest) returns (WarehouseInfo);
  rpc ListWarehouses(ListWarehousesRequest) returns (ListWarehousesResponse);
}

// Stock-related messages
message StockInfo {
  int64 id = 1;
  int64 product_id = 2;
  int64 warehouse_id = 3;
  int32 quantity = 4;
  int32 reserved = 5;
  int32 available = 6; // Calculated as quantity - reserved
  int32 low_stock_threshold = 7;
  bool in_stock = 8;
  google.protobuf.Timestamp created_at = 9;
  google.protobuf.Timestamp updated_at = 10;
}

message SetStockRequest {
  int64 product_id = 1;
  int64 warehouse_id = 2;
  int32 quantity = 3;
  int32 low_stock_threshold = 4;
}

message GetStockRequest {
  int64 product_id = 1;
  int64 warehouse_id = 2;
}

message ListStocksRequest {
  int32 page = 1;
  int32 page_size = 2;
  int64 warehouse_id = 3;
  bool low_stock_only = 4;
  bool out_of_stock_only = 5;
}

message ListStocksResponse {
  repeated StockInfo stocks = 1;
  int32 total = 2;
}

message IncrementStockRequest {
  int64 product_id = 1;
  int64 warehouse_id = 2;
  int32 quantity = 3;
}

message DecrementStockRequest {
  int64 product_id = 1;
  int64 warehouse_id = 2;
  int32 quantity = 3;
}

message BatchGetStocksRequest {
  repeated int64 product_ids = 1;
  int64 warehouse_id = 2;
}

message BatchGetStocksResponse { repeated StockInfo stocks = 1; }

// Reservation-related messages
message ReservationInfo {
  int64 id = 1;
  string order_id = 2;
  repeated ReservationItemInfo items = 3;
  ReservationStatus status = 4;
  google.protobuf.Timestamp created_at = 5;
  google.protobuf.Timestamp updated_at = 6;
  google.protobuf.Timestamp expires_at = 7;
}

message ReservationItemInfo {
  int64 product_id = 1;
  int64 warehouse_id = 2;
  int32 quantity = 3;
}

enum ReservationStatus {
  PENDING = 0;
  COMMITTED = 1;
  CANCELLED = 2;
  EXPIRED = 3;
}

message ReserveStockRequest {
  string order_id = 1;
  repeated ReservationItemInfo items = 2;
  int32 expiration_minutes =
      3; // How long the reservation should last before auto-expiring
}

message ReservationResponse {
  ReservationInfo reservation = 1;
  bool success = 2;
  repeated ReservationError errors = 3;
}

message ReservationError {
  int64 product_id = 1;
  int64 warehouse_id = 2;
  string message = 3;
}

message CommitReservationRequest { int64 reservation_id = 1; }

message CancelReservationRequest { int64 reservation_id = 1; }

message GetReservationRequest { int64 reservation_id = 1; }

// Warehouse-related messages
message WarehouseInfo {
  int64 id = 1;
  string name = 2;
  string address = 3;
  bool is_active = 4;
  google.protobuf.Timestamp created_at = 5;
  google.protobuf.Timestamp updated_at = 6;
}

message CreateWarehouseRequest {
  string name = 1;
  string address = 2;
  bool is_active = 3;
}

message UpdateWarehouseRequest {
  int64 id = 1;
  string name = 2;
  string address = 3;
  bool is_active = 4;
}

message DeleteWarehouseRequest { int64 id = 1; }

message GetWarehouseRequest { int64 id = 1; }

message ListWarehousesRequest {
  int32 page = 1;
  int32 page_size = 2;
  bool active_only = 3;
}

message ListWarehousesResponse {
  repeated WarehouseInfo warehouses = 1;
  int32 total = 2;
}